name: Deploy Project

on:
  push:
    branches:
      - main
      - master
      - "feat/**"
      - "fix/**"
    #paths-ignore:
      #- '.github/workflows*'
  pull_request:
    types:
      - opened
    branches:
      - master
    paths-ignore:
      - '.github/workflows*'

env:
  MONGO_DB_USERNAME: ${{ secrets.MONGO_DB_USERNAME }}
  MONGO_DB_PASSWORD: ${{ secrets.MONGO_DB_PASSWORD }}
  PORT: 4400
  
jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Get code
        uses: actions/Checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**package-lock.json') }}
      - name: Install NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
      - name: Print env variable
        run: echo "Port:" $PORT

  build-code:
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - name: Get code
        uses: actions/Checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**package-lock.json') }}
      - name: Install NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Build project
        id: run-build
        run: npm run build
      - name: Build failed
        if: failure() && steps.run-build.outcome == 'failure'
        run: echo "Build is failed"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist

  deploy:
    needs: build-code
    runs-on: ubuntu-22.04
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
      - name: Deploy
        run: echo "Deploying"
    
  report:
    needs: deploy
    if: failure()
    runs-on: ubuntu-22.04
    steps:
      - name: Fail output infromation
        run: |
          echo "Pipeline is failed"
          echo "${{ toJSON(github) }}"

        
